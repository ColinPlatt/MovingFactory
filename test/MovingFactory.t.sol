// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import {MovingFactory} from "../src/MovingFactory.sol";

contract MovingFactoryTest is Test{

    MovingFactory factory;

    address Admin = address(0xad);

    function setUp() public {

        vm.deal(Admin, 10 ether);

        vm.startPrank(Admin);

        factory = new MovingFactory();

        vm.stopPrank();

    }

    bytes creationPattern = hex'608060405234801561001057600080fd5b5061054c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317c09e9d14610046578063f3638f7814610050578063fa869ac814610074575b600080fd5b61004e610087565b005b6100586100e5565b6040516001600160a01b03909116815260200160405180910390f35b610058610082366004610469565b610102565b61008f6100e5565b6001600160a01b03163b6000036100e25760405162461bcd60e51b8152602060048201526012602482015271151a1a5cc81a5cc81d1a19481b185d195cdd60721b60448201526064015b60405180910390fd5b30ff5b60006100fd6001600160601b03193060601b16610232565b905090565b60006101563060601b6bffffffffffffffffffffffff191684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610313915050565b9050306001600160a01b0316803b806020016040519081016040528181526000908060200190933c80519060200120816001600160a01b0316803b806020016040519081016040528181526000908060200190933c80519060200120146101f05760405162461bcd60e51b815260206004820152600e60248201526d0929cac82989288be9882aa9c86960931b60448201526064016100d9565b6040516001600160a01b03821681527f219eb7f872c1b5d1aead1c293e9da4a822fef434cf8253d0853e5438dcdfaf8c9060200160405180910390a192915050565b604080518082018252601081526f67363d3d37363d34f03d5260086018f360801b60209182015290516001600160f81b0319918101919091526001600160601b03193060601b166021820152603581018290527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f605582015260009081906102d1906075015b6040516020818303038152906040528051906020012090565b6040516135a560f21b60208201526001600160601b0319606083901b166022820152600160f81b603682015290915061030c906037016102b8565b9392505050565b6000806040518060400160405280601081526020016f67363d3d37363d34f03d5260086018f360801b81525090506000858251602084016000f590506001600160a01b0381166103995760405162461bcd60e51b81526020600482015260116024820152701111541313d65351539517d19052531151607a1b60448201526064016100d9565b6103a286610232565b92506000816001600160a01b031685876040516103bf91906104db565b60006040518083038185875af1925050503d80600081146103fc576040519150601f19603f3d011682016040523d82523d6000602084013e610401565b606091505b5050905080801561041b57506001600160a01b0384163b15155b61045f5760405162461bcd60e51b815260206004820152601560248201527412539255125053125690551253d397d19052531151605a1b60448201526064016100d9565b5050509392505050565b6000806020838503121561047c57600080fd5b823567ffffffffffffffff8082111561049457600080fd5b818501915085601f8301126104a857600080fd5b8135818111156104b757600080fd5b8660208285010111156104c957600080fd5b60209290920196919550909350505050565b6000825160005b818110156104fc57602081860181015185830152016104e2565b8181111561050b576000828501525b50919091019291505056fea26469706673582212204e2ec0410ccee8a0e9c1f0866dfe4aa2776c390c39becf4ca773ef1fbdb1b5e464736f6c634300080f0033';

    function testNextLocation() public {

        vm.startPrank(Admin);

            //round1

            bytes memory creationCode = type(MovingFactory).creationCode;
            
            assertEq(creationCode, creationPattern);

            address nextFactory = factory.deployFromImage(creationPattern);
            emit log_address(nextFactory);
            factory.removeOld();

            //round2
            MovingFactory newFactory = MovingFactory(nextFactory);

            address newFactory1 = newFactory.deployFromImage(creationPattern);
            emit log_address(newFactory1);
            
            newFactory.removeOld();

            
            

        vm.stopPrank();

    }

    function testFailNextLocation() public {

        vm.startPrank(Admin);

            //round1

            bytes memory creationCode = type(MovingFactory).creationCode;
            
            assertEq(creationCode, creationPattern);

            address nextFactory = factory.deployFromImage(creationPattern);


            //bad round
            MovingFactory newFactory = MovingFactory(nextFactory);

            bytes memory badPattern = hex'608060405234801561001057600080fd5b50610421806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fa869ac814610030575b600080fd5b61004361003e36600461033e565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60006100b33060601b6bffffffffffffffffffffffff191684848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525092506100f8915050565b6040516001600160a01b03821681529091507f219eb7f872c1b5d1aead1c293e9da4a822fef434cf8253d0853e5438dcdfaf8c9060200160405180910390a192915050565b6000806040518060400160405280601081526020016f67363d3d37363d34f03d5260086018f360801b81525090506000858251602084016000f590506001600160a01b0381166101835760405162461bcd60e51b81526020600482015260116024820152701111541313d65351539517d19052531151607a1b60448201526064015b60405180910390fd5b61018c86610253565b92506000816001600160a01b031685876040516101a991906103b0565b60006040518083038185875af1925050503d80600081146101e6576040519150601f19603f3d011682016040523d82523d6000602084013e6101eb565b606091505b5050905080801561020557506001600160a01b0384163b15155b6102495760405162461bcd60e51b815260206004820152601560248201527412539255125053125690551253d397d19052531151605a1b604482015260640161017a565b5050509392505050565b604080518082018252601081526f67363d3d37363d34f03d5260086018f360801b60209182015290516001600160f81b0319918101919091526bffffffffffffffffffffffff193060601b166021820152603581018290527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f605582015260009081906102f7906075015b6040516020818303038152906040528051906020012090565b6040516135a560f21b60208201526bffffffffffffffffffffffff19606083901b166022820152600160f81b6036820152909150610337906037016102de565b9392505050565b6000806020838503121561035157600080fd5b823567ffffffffffffffff8082111561036957600080fd5b818501915085601f83011261037d57600080fd5b81358181111561038c57600080fd5b86602082850101111561039e57600080fd5b60209290920196919550909350505050565b6000825160005b818110156103d157602081860181015185830152016103b7565b818111156103e0576000828501525b50919091019291505056fea2646970667358221220effd319a254b00193d975cf8ebe68f4ee5c7eccf85bb8b071bd87b15ddf3a8ad64736f6c634300080f0033';
            address newFactory1 = newFactory.deployFromImage(badPattern);
            emit log_address(newFactory1);
            

        vm.stopPrank();

    }



}